apiVersion: apps/v1
kind: Deployment
metadata:
  name: riverkleaner
  namespace: smu-team02
  uid: c78d3332-6157-48e4-9fca-a052579e5647
  resourceVersion: '67317438'
  generation: 2
  creationTimestamp: '2022-11-09T08:27:57Z'
  annotations:
    deployment.kubernetes.io/revision: '2'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"riverkleaner","namespace":"smu-team02"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"riverkleaner"}},"template":{"metadata":{"labels":{"app":"riverkleaner","sidecar.istio.io/inject":"false","version":"v1"}},"spec":{"containers":[{"image":"yzq1780/riverkleaner:latest","imagePullPolicy":"Always","name":"riverkleaner","ports":[{"containerPort":4004,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"128Mi"},"requests":{"cpu":"300m","memory":"64Mi"}}}],"imagePullSecrets":[]}}}}
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: apps/v1
      time: '2022-11-09T08:27:57Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:progressDeadlineSeconds': {}
          'f:replicas': {}
          'f:revisionHistoryLimit': {}
          'f:selector': {}
          'f:strategy':
            'f:rollingUpdate':
              .: {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
            'f:type': {}
          'f:template':
            'f:metadata':
              'f:labels':
                .: {}
                'f:app': {}
                'f:sidecar.istio.io/inject': {}
            'f:spec':
              'f:containers':
                'k:{"name":"riverkleaner"}':
                  .: {}
                  'f:image': {}
                  'f:imagePullPolicy': {}
                  'f:name': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":4004,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:name': {}
                      'f:protocol': {}
                  'f:resources':
                    .: {}
                    'f:limits':
                      .: {}
                      'f:cpu': {}
                      'f:memory': {}
                    'f:requests':
                      .: {}
                      'f:cpu': {}
                      'f:memory': {}
                  'f:terminationMessagePath': {}
                  'f:terminationMessagePolicy': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:terminationGracePeriodSeconds': {}
    - manager: kubectl-client-side-apply
      operation: Update
      apiVersion: apps/v1
      time: '2022-11-09T12:50:46Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
        'f:spec':
          'f:template':
            'f:metadata':
              'f:labels':
                'f:version': {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2022-11-09T12:50:57Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:deployment.kubernetes.io/revision': {}
        'f:status':
          'f:availableReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:observedGeneration': {}
          'f:readyReplicas': {}
          'f:replicas': {}
          'f:updatedReplicas': {}
      subresource: status
spec:
  replicas: 1
  selector:
    matchLabels:
      app: riverkleaner
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: riverkleaner
        sidecar.istio.io/inject: 'false'
        version: v1
    spec:
      containers:
        - name: riverkleaner
          image: 'yzq1780/riverkleaner:latest'
          ports:
            - name: http
              containerPort: 4004
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 300m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 2
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  conditions:
    - type: Available
      status: 'True'
      lastUpdateTime: '2022-11-09T09:04:43Z'
      lastTransitionTime: '2022-11-09T09:04:43Z'
      reason: MinimumReplicasAvailable
      message: Deployment has minimum availability.
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2022-11-09T12:50:57Z'
      lastTransitionTime: '2022-11-09T09:04:43Z'
      reason: NewReplicaSetAvailable
      message: ReplicaSet "riverkleaner-64c44495d9" has successfully progressed.

---
apiVersion: v1
kind: Service
metadata:
  name: riverkleaner-service
  namespace: smu-team02
  uid: 57bc4641-7a33-4172-a618-90710eac6f4c
  resourceVersion: '67317346'
  creationTimestamp: '2022-11-09T07:54:16Z'
  labels:
    app: riverkleaner-app
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2022-11-09T07:54:16Z","labels":{"app":"riverkleaner-app"},"name":"riverkleaner-service","namespace":"smu-team02","resourceVersion":"67171448","uid":"57bc4641-7a33-4172-a618-90710eac6f4c"},"spec":{"clusterIP":"100.104.216.3","clusterIPs":["100.104.216.3"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"http","port":4004,"protocol":"TCP","targetPort":4004}],"selector":{"app":"riverkleaner-app"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: v1
      time: '2022-11-09T07:54:16Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations': {}
          'f:labels':
            .: {}
            'f:app': {}
        'f:spec':
          'f:internalTrafficPolicy': {}
          'f:ports':
            .: {}
            'k:{"port":4004,"protocol":"TCP"}':
              .: {}
              'f:name': {}
              'f:port': {}
              'f:protocol': {}
              'f:targetPort': {}
          'f:selector': {}
          'f:sessionAffinity': {}
          'f:type': {}
    - manager: kubectl-client-side-apply
      operation: Update
      apiVersion: v1
      time: '2022-11-09T12:50:47Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
spec:
  ports:
    - name: http
      protocol: TCP
      port: 4004
      targetPort: 4004
  selector:
    app: riverkleaner-app
  clusterIP: 100.104.216.3
  clusterIPs:
    - 100.104.216.3
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster
status:
  loadBalancer: {}

---
apiVersion: gateway.kyma-project.io/v1alpha1
kind: APIRule
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"gateway.kyma-project.io/v1alpha1","kind":"APIRule","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"riverkleaner-rule"},"name":"riverkleaner-rule","namespace":"smu-team02"},"spec":{"gateway":"kyma-gateway.kyma-system.svc.cluster.local","rules":[{"accessStrategies":[{"config":{},"handler":"allow"}],"methods":["GET","POST"],"path":"/.*"}],"service":{"host":"riverkleaner","name":"riverkleaner-service","port":4004}}}
  creationTimestamp: '2022-11-09T08:13:57Z'
  generation: 1
  labels:
    app.kubernetes.io/name: riverkleaner-rule
  managedFields:
    - apiVersion: gateway.kyma-project.io/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:labels':
            .: {}
            'f:app.kubernetes.io/name': {}
        'f:spec':
          .: {}
          'f:gateway': {}
          'f:rules': {}
          'f:service':
            .: {}
            'f:host': {}
            'f:name': {}
            'f:port': {}
      manager: Mozilla
      operation: Update
      time: '2022-11-09T08:13:57Z'
    - apiVersion: gateway.kyma-project.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        'f:status':
          'f:APIRuleStatus':
            .: {}
            'f:code': {}
          'f:accessRuleStatus':
            .: {}
            'f:code': {}
          'f:lastProcessedTime': {}
          'f:observedGeneration': {}
          'f:virtualServiceStatus':
            .: {}
            'f:code': {}
      manager: manager
      operation: Update
      subresource: status
      time: '2022-11-09T08:13:58Z'
    - apiVersion: gateway.kyma-project.io/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
      manager: kubectl-client-side-apply
      operation: Update
      time: '2022-11-09T12:50:47Z'
  name: riverkleaner-rule
  namespace: smu-team02
  resourceVersion: '67317357'
  uid: e8faff99-e649-40d3-b492-b16b05eb9e3a
spec:
  gateway: kyma-gateway.kyma-system.svc.cluster.local
  rules:
    - accessStrategies:
        - config: {}
          handler: allow
      methods:
        - GET
        - POST
      path: /.*
  service:
    host: riverkleaner
    name: riverkleaner-service
    port: 4004
status:
  APIRuleStatus:
    code: OK
  accessRuleStatus:
    code: OK
  lastProcessedTime: '2022-11-09T08:13:58Z'
  observedGeneration: 1
  virtualServiceStatus:
    code: OK
